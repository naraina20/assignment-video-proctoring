// src/utils/downloadReport.js
import jsPDF from "jspdf";

// Function to fetch session events and generate PDF
export async function downloadReport(sessionId) {
  try {
    // Fetch session data (distractions, submission status, etc.)
    const response = await fetch(`/api/events/${sessionId}`);
    const events = await response.json();

    const submittedRes = await fetch(`/api/submitted/${sessionId}`);
    const submittedData = await submittedRes.json();

    // Create PDF instance
    const doc = new jsPDF();

    // Title
    doc.setFontSize(18);
    doc.text("Proctoring Report", 14, 20);

    // Candidate info
    doc.setFontSize(12);
    doc.text(`Session ID: ${sessionId}`, 14, 35);
    doc.text(
      `Submitted: ${submittedData?.is_submitted ? "Yes" : "No"}`,
      14,
      45
    );

    // Add Events
    doc.text("Distractions & Focus Events:", 14, 60);

    if (events.length > 0) {
      events.forEach((e, index) => {
        const y = 70 + index * 10;
        doc.text(
          `${index + 1}. ${e.event_name} (Start: ${e.start_time}, End: ${
            e.end_time || "N/A"
          }, Duration: ${e.duration || "-"}s)`,
          14,
          y
        );
      });
    } else {
      doc.text("No distractions detected.", 14, 70);
    }

    // Footer text
    doc.setFontSize(10);
    doc.text(
      "Generated by ProctorGuard AI - Ensuring fair and secure interviews.",
      14,
      280
    );

    // Save PDF
    doc.save(`report-${sessionId}.pdf`);
  } catch (err) {
    console.error("Error generating report:", err.message);
  }
}
